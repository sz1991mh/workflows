name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run against'
        type: environment
        required: false 

jobs:
  check-go-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3.5.0
        with:
          go-version: '1.19'
      - run: go version

  issue-cert:
    name: Issue SSL certificate
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'staging' }}
    container:
      image: neilpang/acme.sh
      env:
        NODE_ENV: development
        SECRET_HOSTS: ${{ secrets.HOSTS }}

    steps:
      - run: |
          acme.sh --help
          env
          
          echo "$ACME_SH_ACCOUNT_TAR" | base64 -d | tar -C $LE_CONFIG_HOME -xz
          
          acme.sh --issue $ACME_SH_ISSUE_ARGS
          acme.sh --install-cert $ACME_SH_INSTALL_ARGS --key-file $GITHUB_WORKSPACE/key.key --fullchain-file $GITHUB_WORKSPACE/cert.crt
        env:
          ACME_SH_ACCOUNT_TAR: ${{ secrets.ACME_SH_ACCOUNT_TAR }}
          ACME_SH_ISSUE_ARGS: ${{ fromJson(secrets.ACME_SH_COMMAND_ARGS).issue_args }}
          ACME_SH_INSTALL_ARGS: ${{ fromJson(secrets.ACME_SH_COMMAND_ARGS).install_args }}
          
      - run: |
          echo "HOSTS: $SECRET_HOSTS"
          echo "HOSTS: $SECRET_HOSTS" | sed 's/\./#/g'
        env:
          SECRET_HOSTS: ${{ secrets.HOSTS }}
          
      - run: |
          echo "ACME_SH_KEY<<EOF" >> $GITHUB_OUTPUT
          cat $GITHUB_WORKSPACE/key.key >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "ACME_SH_CERT<<EOF" >> $GITHUB_OUTPUT
          cat $GITHUB_WORKSPACE/cert.key >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  deploy-cert:
    name: deploy SSL certificate
    needs: issue-cert
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'staging' }}
    container:
      image: alpine
      env:
        NODE_ENV: development
        SECRET_HOSTS: ${{ secrets.HOSTS }}
    steps:
      - run: |
          echo "KEY:"
          echo ${{needs.issue-cert.outputs.ACME_SH_KEY}} 
          echo ${{needs.issue-cert.outputs.ACME_SH_KEY}} >$GITHUB_WORKSPACE/cert.key
          echo "CERT:"
          echo ${{needs.issue-cert.outputs.ACME_SH_CERT}}
          echo ${{needs.issue-cert.outputs.ACME_SH_CERT}} >$GITHUB_WORKSPACE/cert.crt
