name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run against'
        type: environment
        required: false 
        default: staging

jobs:
  check-go-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3.5.0
        with:
          go-version: '1.19'
      - run: go version

  issue-ssl-certificate:
    name: Issue SSL certificate
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: Menci/acme@v1
        if: ${{ false  }}
        with:
          version: 3.0.2

          # Register your account and try issue a certificate with DNS API mode
          # Then fill with the output of `tar cz ca account.conf | base64 -w0` running in your `~/.acme.sh`
          account-tar: ${{ secrets.ACME_SH_ACCOUNT_TAR }}

          domains: '*.serenitytune.tk *.ddns.serenitytune.tk'
          domains-file: ''
          append-wildcard: false

          arguments: --challenge-alias whisperwind.cf --dns dns_he
          arguments-file: ''

          output-fullchain: '' 
          output-key: '' 
          output-pfx: '' 
          output-pfx-password: ''

          uninstall: false
      
      - run: |
          #~/.acme.sh/acme.sh --install-cert -d "$ACME_SH_FIRST_DOMAIN" --fullchain-file "$GITHUB_WORKSPACE/fullchain.pem" --key-file "$GITHUB_WORKSPACE/key.pem"
          for x in 123 ABC XYZ
          do
            echo "x is $x"
            echo "::add-mask::$x"
            echo "after mask, x is $x"
          done
          echo "123 ABC XYZ"
          echo "GITHUB_ENV: $GITHUB_ENV"
          cat $GITHUB_ENV
          echo "HOSTS=$SECRET_HOSTS" >> $GITHUB_ENV
          cat $GITHUB_ENV
          
        shell: bash
        env:
          SECRET_HOSTS: ${{ secrets.HOSTS }}
      
