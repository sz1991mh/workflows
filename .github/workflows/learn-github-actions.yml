name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run against'
        type: environment
        required: false 

jobs:
  check-go-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3.5.0
        with:
          go-version: '1.19'
      - run: go version

  issue-ssl-certificate:
    name: Issue SSL certificate
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'staging' }}
    container:
      image: neilpang/acme.sh
      env:
        NODE_ENV: development
        SECRET_HOSTS: ${{ secrets.HOSTS }}

    steps:
      - run: |
          acme.sh --help
          env
          
          echo "$ACME_SH_ACCOUNT_TAR" | base64 -d | tar -C $LE_CONFIG_HOME -xz
          
          acme.sh --issue --keylength ec-256 -d "*.serenitytune.tk" -d "*.ddns.serenitytune.tk" --challenge-alias whisperwind.cf --dns dns_he
          acme.sh --install-cert -d '*.serenitytune.tk' --key-file $GITHUB_WORKSPACE/key.key --fullchain-file $GITHUB_WORKSPACE/cert.crt
          
        env:
          ACME_SH_ACCOUNT_TAR: ${{ secrets.ACME_SH_ACCOUNT_TAR }}
          ACME_SH_COMMANDS: ${{ secrets.ACME_SH_COMMANDS }}
          
      - run: |
          for h in $SECRET_HOSTS
          do
            echo "h is $h"
            echo "::add-mask::$h"
            echo "after mask, h is $h"
          done
          echo "HOSTS: $SECRET_HOSTS"
          echo "HOSTS: $SECRET_HOSTS | sed 's/\./#/g'"
          
        env:
          SECRET_HOSTS: ${{ secrets.HOSTS }}

  deploy-ssl-certificate:
    name: deploy SSL certificate
    needs: issue-ssl-certificate
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'staging' }}
    container:
      image: alpine
      env:
        NODE_ENV: development
        SECRET_HOSTS: ${{ secrets.HOSTS }}
    steps:
      - run: |
          echo $GITHUB_WORKSPACE
          find $GITHUB_WORKSPACE
